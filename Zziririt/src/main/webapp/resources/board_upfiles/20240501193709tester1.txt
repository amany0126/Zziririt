DROP TABLE TB_LIKE CASCADE CONSTRAINTS;
DROP TABLE REPLY CASCADE CONSTRAINTS;
DROP TABLE WISHLIST CASCADE CONSTRAINTS;
DROP TABLE MEETING_MEM CASCADE CONSTRAINTS;
DROP TABLE GROUP_COMMENT CASCADE CONSTRAINTS;
DROP TABLE GROUP_BOARD CASCADE CONSTRAINTS;
DROP TABLE GROUP_MEM CASCADE CONSTRAINTS;
DROP TABLE MEETING CASCADE CONSTRAINTS;
DROP TABLE TGROUP CASCADE CONSTRAINTS;
DROP TABLE BOARD CASCADE CONSTRAINTS;
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE WISHLIST CASCADE CONSTRAINTS;
DROP TABLE MEETING CASCADE CONSTRAINTS;
DROP TABLE MEETING_MEM CASCADE CONSTRAINTS;
DROP TABLE CATEGORY;
DROP TABLE LETTER CASCADE CONSTRAINTS;
drop SEQUENCE SEQ_UNO; -- MEMEBER
drop SEQUENCE SEQ_MNO;-- MEETING
drop SEQUENCE SEQ_GNO;-- TGROUP
drop SEQUENCE SEQ_GBNO;-- GROUP_BOARD
drop SEQUENCE SEQ_GCNO;-- GROUP_COMMENT
drop SEQUENCE SEQ_GMNO;-- GROUP_MEM
drop SEQUENCE SEQ_CATEGORY;-- CATEGORY
drop SEQUENCE SEQ_BNO;-- BOARD
drop SEQUENCE SEQ_RNO;-- REPLY
drop SEQUENCE SEQ_LNO;-- LETTER

--FOREIGN KEY (외래키열명) REFERENCES 참조테이블명(기본키열명)

CREATE SEQUENCE SEQ_UNO;--멤버 시퀀스
CREATE SEQUENCE SEQ_MNO;--정모 시퀀스
CREATE SEQUENCE SEQ_GNO;--그룹 시퀀스
CREATE SEQUENCE SEQ_GBNO;--그룹 게시판 시퀀스
CREATE SEQUENCE SEQ_GCNO;-- 그룹게시판 댓글 시퀀스
CREATE SEQUENCE SEQ_GMNO;-- 그룹 맴버 시퀀스
CREATE SEQUENCE SEQ_CATEGORY;-- 카테고리 시퀀스
CREATE SEQUENCE SEQ_BNO;-- 전체 게시판 시퀀스
CREATE SEQUENCE SEQ_RNO;-- 전체 게시판 댓글 시퀀스
CREATE SEQUENCE SEQ_LNO;-- 쪽지 시퀀스

select seq_gno.nextval from dual;
select seq_gmno.nextval from dual;
-----------------------게시판------------------------

-- 카테고리 테이블
CREATE TABLE CATEGORY (
	CATEGORY_NAME	VARCHAR2(20 CHAR)   PRIMARY KEY,
	STATUS	        NUMBER		     
);

-- 회원 테이블
CREATE TABLE MEMBER (
	USER_NO	            NUMBER		        PRIMARY KEY,
	USER_ID	            VARCHAR2(20 CHAR)	UNIQUE NOT NULL,
	USER_PWD	        VARCHAR2(20 CHAR)	NOT NULL,
	USER_NICKNAME	    VARCHAR2(15 CHAR)	UNIQUE NOT NULL,
	USER_NAME	        VARCHAR2(20 CHAR)	NOT NULL,
	USER_GENDER	        CHAR(1)		        NOT NULL,
	USER_PROFILE	    VARCHAR2(100 CHAR)	,
	USER_PHONE	        VARCHAR2(11)		NOT NULL,
	USER_MAIL	        VARCHAR2(40 CHAR)	,
	BIRTH_DATE	        DATE		        NOT NULL,
	JOIN_DATE	        DATE		        DEFAULT SYSDATE,
    MODIFY_DATE         DATE                DEFAULT SYSDATE,
	STATUS	            NUMBER	        	DEFAULT 1,
	ADDRESS	            VARCHAR2(40 CHAR)	NOT NULL,
	INTRODUCE_CONTENT	VARCHAR2(500 CHAR),
    CONSTRAINT CHK_USER_GENDER CHECK(USER_GENDER IN ('M', 'F'))
);
COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NICKNAME IS '회원닉네임';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원명';
COMMENT ON COLUMN MEMBER.USER_GENDER IS '성별';
COMMENT ON COLUMN MEMBER.USER_PROFILE IS '프로필사진경로';
COMMENT ON COLUMN MEMBER.USER_PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.USER_MAIL IS '이메일';
COMMENT ON COLUMN MEMBER.BIRTH_DATE IS '생년월일';
COMMENT ON COLUMN MEMBER.JOIN_DATE IS '회원가입일';
COMMENT ON COLUMN MEMBER.MODIFY_DATE IS '회원정보수정일';
COMMENT ON COLUMN MEMBER.STATUS IS '상태값(1/0)';
COMMENT ON COLUMN MEMBER.ADDRESS IS '주소';
COMMENT ON COLUMN MEMBER.INTRODUCE_CONTENT IS '자기소개';

COMMENT ON COLUMN CATEGORY.CATEGORY_NAME IS '카테고리이름';
COMMENT ON COLUMN CATEGORY.STATUS IS '상태값(1/0)';

-- 일반게시판 테이블
CREATE TABLE BOARD (
	BOARD_NO	        NUMBER		        PRIMARY KEY,
    BOARD_TITLE	        VARCHAR2(30  CHAR)	NOT NULL,
	BOARD_CONTENT	    VARCHAR2(200 CHAR)	NOT NULL,
	CREATE_TIME	        DATE		        NOT NULL,
	MEETING_TIME	    DATE		        NOT NULL,
	MEETING_SPOT	    VARCHAR2(30 CHAR)	NOT NULL,
    FILE_INFO	        VARCHAR2(50 CHAR)	,
	PEOPLE_LIMIT	    NUMBER		        NOT NULL,
	STATUS	            NUMBER	        	DEFAULT 1,
	BOARD_WRITER	    NUMBER		        NOT NULL,
	CATEGORY_NAME	    VARCHAR2(20 CHAR)   NOT NULL,
	MEETING_STATUS	    NUMBER	        	DEFAULT 1,
    COUNT               NUMBER              DEFAULT 0,
    FOREIGN KEY(BOARD_WRITER) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY (CATEGORY_NAME) REFERENCES CATEGORY(CATEGORY_NAME)
);
COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글내용';
COMMENT ON COLUMN BOARD.CREATE_TIME IS '작성시간';
COMMENT ON COLUMN BOARD.MEETING_TIME IS '모임시간';
COMMENT ON COLUMN BOARD.MEETING_SPOT IS '모임장소';
COMMENT ON COLUMN BOARD.FILE_INFO IS '첨부파일경로';
COMMENT ON COLUMN BOARD.PEOPLE_LIMIT IS '모임정원';
COMMENT ON COLUMN BOARD.STATUS IS '상태값(1/0)';
COMMENT ON COLUMN BOARD.BOARD_WRITER IS '작성자회원번호';
COMMENT ON COLUMN BOARD.CATEGORY_NAME IS '카테고리이름';
COMMENT ON COLUMN BOARD.MEETING_STATUS IS '인원모집마감여부(1/0)';
COMMENT ON COLUMN BOARD.COUNT IS '조회수';
-- 좋아요(추천) 버튼 테이블
CREATE TABLE TB_LIKE (
    LIKE_USER_NO NUMBER,
    LIKE_BOARD_NO NUMBER,
    FOREIGN KEY(LIKE_USER_NO) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY(LIKE_BOARD_NO) REFERENCES BOARD(BOARD_NO)
);
COMMENT ON COLUMN TB_LIKE.LIKE_USER_NO IS '좋아요누른회원번호';
COMMENT ON COLUMN TB_LIKE.LIKE_BOARD_NO IS '좋아요눌린게시글번호';
-- 댓글 테이블
CREATE TABLE REPLY (
	REPLY_NO	    NUMBER		        PRIMARY KEY,
    REPLY_CONTENT	VARCHAR2(500 CHAR)	NOT NULL,
    REF_BNO	        NUMBER		        NOT NULL,
    REPLY_WRITER    NUMBER              NOT NULL,
	CREATE_TIME	    DATE		        NOT NULL,
	STATUS	        NUMBER	        	DEFAULT 1,
	FOREIGN KEY(REF_BNO) REFERENCES BOARD(BOARD_NO),
    FOREIGN KEY(REPLY_WRITER) REFERENCES MEMBER(USER_NO)
);
COMMENT ON COLUMN REPLY.REPLY_NO IS '댓글번호';
COMMENT ON COLUMN REPLY.REPLY_CONTENT IS '댓글내용';
COMMENT ON COLUMN REPLY.REF_BNO IS '참조하는게시글번호';
COMMENT ON COLUMN REPLY.REPLY_WRITER IS '작성자회원번호';
COMMENT ON COLUMN REPLY.CREATE_TIME IS '작성시간';
COMMENT ON COLUMN REPLY.STATUS IS '상태값(1/0)';

-- 그룹
CREATE TABLE TGROUP(
	GROUP_NO	NUMBER	PRIMARY KEY,
	GROUP_NAME	VARCHAR2(100 CHAR)		NOT NULL,
	GROUP_DESCRIPT	VARCHAR2(500 CHAR)		NULL,
	GROUP_LIMIT NUMBER		default 30,
	GROUP_CREATEDAY	DATE		NULL,
	GROUP_AREA	VARCHAR2(40 CHAR)		NULL,
	GROUP_PROFILE	VARCHAR2(100 CHAR)		NULL,
	STATUS  	NUMBER,
    CATEGORY_NAME	VARCHAR2(20 CHAR) ,
    FOREIGN KEY(CATEGORY_NAME) REFERENCES CATEGORY(CATEGORY_NAME)
);



-- 그룹 맴버
CREATE TABLE GROUP_MEM (
	GROUP_MEM_NO	NUMBER		PRIMARY KEY,
	GROUP_MEM_TYPE	NUMBER,
	GROUP_MEM_MENT	VARCHAR2(150 CHAR)		NULL,
	GROUP_JOIN_DATE 	DATE		NULL,
	STATUS	    NUMBER		default 1,
	USER_NO	NUMBER	,
	GROUP_NO	NUMBER	,
    FOREIGN KEY(USER_NO) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY(GROUP_NO) REFERENCES TGROUP(GROUP_NO)
);

--그룹 게시판 
CREATE TABLE GROUP_BOARD (
	BOARD_NO	NUMBER		PRIMARY KEY,
	BOARD_TITLE 	VARCHAR2(30 CHAR)		NOT NULL,
	BOARD_CONTENT	VARCHAR2(150 CHAR)		NULL,
	WRITE_TIME	DATE		,
	STATUS  	NUMBER		,
	GROUP_MEM_NO	NUMBER,
	GROUP_NO	NUMBER,
    FOREIGN KEY (GROUP_MEM_NO) REFERENCES GROUP_MEM(GROUP_MEM_NO),
    FOREIGN KEY (GROUP_NO) REFERENCES TGROUP(GROUP_NO)
);
--그룹 게시판 댓글
CREATE TABLE GROUP_COMMENT (
	COMMENT_NO	NUMBER		PRIMARY KEY,
	CONTENT	    VARCHAR2(200 CHAR)		NOT NULL,
	WRITE_TIME	DATE	,
	STATUS  	NUMBER	,
	GROUP_MEM_NO 	NUMBER	,
	BOARD_NO	 NUMBER,
    FOREIGN KEY (GROUP_MEM_NO) REFERENCES GROUP_MEM(GROUP_MEM_NO),
    FOREIGN KEY (BOARD_NO) REFERENCES GROUP_BOARD(BOARD_NO)
);


--찜
CREATE TABLE WISHLIST (
	GROUP_NO	NUMBER	,
	USER_NO	NUMBER	,
    FOREIGN KEY (GROUP_NO) REFERENCES TGROUP(GROUP_NO),
    FOREIGN KEY (USER_NO) REFERENCES MEMBER(USER_NO)
);

-- 정모
CREATE TABLE MEETING (
	MEETING_NO	NUMBER		PRIMARY KEY,
	MEETING_NAME 	VARCHAR2(30 CHAR)		NOT NULL,
	MEETING_SPOT	VARCHAR2(40 CHAR)		NOT NULL,
	MEETING_TIME	DATE		NOT NULL,
	MEETING_CONTENT	VARCHAR2(500)		NULL,
	MEETING_LIMIT	NUMBER		NOT NULL,
	GROUP_NO	NUMBER	NOT NULL,
    STATUS NUMBER,
    CREATE_USER NUMBER NOT NULL,
    FOREIGN KEY  (CREATE_USER) REFERENCES MEMBER(USER_NO),
    FOREIGN KEY (GROUP_NO) REFERENCES TGROUP(GROUP_NO)
);

-- 정모 맴버
CREATE TABLE MEETING_MEM (
	MEETING_NO	 NUMBER		NOT NULL,
	GROUP_MEM_NO	NUMBER		NOT NULL,
    STATUS NUMBER,
    FOREIGN KEY (MEETING_NO) REFERENCES MEETING(MEETING_NO),
    FOREIGN KEY (GROUP_MEM_NO) REFERENCES GROUP_MEM(GROUP_MEM_NO)
);

-- 쪽지 테이블
CREATE TABLE LETTER (
    LETTER_NO NUMBER PRIMARY KEY,
    LETTER_TITLE VARCHAR2(30 CHAR),
    LETTER_CONTENT VARCHAR2(200 CHAR),
    SEND_TIME DATE DEFAULT SYSDATE,
    RECEIVE_TIME DATE DEFAULT NULL,
    STATUS NUMBER DEFAULT 0,
    USER_SENDER VARCHAR2(20 CHAR),
    USER_RECEIVER VARCHAR2 (20 CHAR),
    COUNT NUMBER DEFAULT 0,
    SAVE_RECEIVER VARCHAR2(20CHAR),
    FOREIGN KEY (USER_SENDER) REFERENCES MEMBER(USER_ID),
    FOREIGN KEY (USER_RECEIVER) REFERENCES MEMBER(USER_ID)
    );